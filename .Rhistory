q()
q()
print "aman sinha"
print as.matrix.noquote()
print aman
print("aman")
clearPushBack()
clear()
clean()
q
quit()
print(aman)
print("amansinha")
getwd()
cd "C:\Users\Aman\Desktop\spec data"
cd C:\Users\Aman\Desktop\spec data
cd
cd()
clearPushBack()
q
clear()
quit()
library(swirl)
swirl()
install.packages("caret")
install.packages("caret")
install.packages("randomForest")
install.packages("ggplot2")
install.packages("Hmisc")
install.packages("doParallel")
install.packages("e1071")
install.packages("rattle")
install.packages("rattle")
install.packages("rattle")
library(swirl)
swirl
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
abline(regrline, lwd=3, col='red')
summary(regrline)
summary(regrline)
fit <- lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
summary(fit)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
ols.slope <- fit$coef[2]
lhs-rhs
lhs-rhs
all.equal(lhs,rhs)
all.equal(lhs,rhs)
varChild <- var(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild,varEst+varRes)
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cov(efit$residuals, attenu$dist)
cor(gpa_nor,gch_nor)
cor(gpa_nor,gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
fit <- lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2) / (n - 2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
mu <- mean(galton$child)
sTot <- sum((galton$child-mu)^2)
sTot <- sum((galton$child-mu)^2)
sRes <- deviance(fit)
sRes <- deviance(fit)
1-sRes/sTot
1-sRes/sTot
summary(fit)$r.squared
summary(fit)$r.squared
cor(galton$parent,galton$child)^2
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
ones <- rep(1, nrow(galton))
swirl()
swirl()
ones <- rep(1, nrow(galton))
swirl()\
swirl()
summary(fit)$r.squared
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ parent,
| galton)
lm(child ~ parent,
galton)
lm(child ~ 1, galton)
View(trees)
1
fit <- lm(Volume ~ Girth + Height + Constant - 1,
trees)
trees2 <- eliminate("Girth",
trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
swiss
all <- lm(Fertility ~ ., swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
makelms()
ec <- swiss$Examination+swiss$Catholic
ec <- swiss$Examination+swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
efit <- lm(Fertility ~ . + ec, swiss)
all$coefficients-efit$coefficients
all$coefficients-efit$coefficients
View(ravenData)
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData)
or mdl <- glm(ravenWinNum ~ ravenScore, family=binomial, data=ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
exp(lodds)/(1+exp(lodds))
summary(mdl)
summary(mdl)
exp(confint(mdl))
exp(confint(mdl))
anova(mdl)
anova(mdl)
qchisq(0.95, 1)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
View(hits)
View(hits)
class(hits[,'date'])
class(hits[,'date'])
as.integer(head(hits[,'date'])
)
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
summary(mdl)
exp(confint(mdl, 'date'))
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
hits[704,]
lambda <- mdl$fitted.values[704]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
qpois(.95, lambda)
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits,
offset = log(visits + 1))
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits,
offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
qpois(.95, mdl2$fitted.values[704])
x1c <- simbias()
x1c <- simbias()
apply(x1c, 1, mean)
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
2
deviance(fit3)
deviance(fit3)
d <- deviance(fit3)/43
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3))/2
n <- (deviance(fit1) - deviance(fit3))/2
n/d
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
2
1
6
6
dim(InsectSprays)
dim(InsectSprays)
head(InsectSprays,15)
head(InsectSprays,15)
sB
sB
summary(InsectSprays[,2])
sapply
sapply(InsectSprays,class)
sapply(InsectSprays,class)
fit <- lm(count ~ spray, InsectSprays)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)$coef
summary(fit)$coef
est <- summary(fit)$coef[,1]
est <- summary(fit)$coef[,1]
mean(sA)
2
mean(sB)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
2
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C\"))
"spray2 <- relevel(InsectSprays$spray,\"C\")"
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C\")
)
)
d
df
""
spray2 <- relevel(InsectSprays$spray,/"C\")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,\"C")
spray2 <- relevel(InsectSprays$spray,\"C")
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count ~ spray2, InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
summary(fit2)$coef
mean(sC)
mean(sC)
(fit$coef[2]-fit$coef[3])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
13
14
12
10
15
19
948
dim(hunger)
names(hunger)
names(hunger)
simply fit <- lm(hunger$Numeric ~ hunger$Year)
fit <- lm(Numeric ~ Year, hunger)
summary(fit2)$coef
summary(fit)$coef
3
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~
hunger$Year[hunger$Sex=="Female"])
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~
hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~
hunger$Year[hunger$Sex=="Male"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~
hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex) or more simply lmBoth
<- lm(Numeric ~ Year+Sex,hunger)
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
lmBoth <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex)
summary(lmBoth)
1
lmInter <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex + hunger$Year *
hunger$Sex)
lmInter <- lm(hunger$Numeric ~ hunger$Year + hunger$Sex + hunger$Year *
hunger$Sex)
summary(lmInter)
summary(lmInter)
fit <- lm(y ~ x, out2)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
1
fitno <- lm(y ~ x, out2[-1, ])
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
plot(fitno, which=1)
coef(fit)-coef(fitno)
coef(fit)-coef(fitno)
head(dfbeta(fit))
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
1-resid(fit)[1]/resno
head(hatvalues(fit))
head(hatvalues(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
3
plot(fit, which=3)
plot(fit, which=3)
plot(fit, which=2)
plot(fit, which=2)
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
head(rstudent(fit))
dy <- predict(fitno, out2)-predict(fit, out2)
dy <- predict(fitno, out2)-predict(fit, out2)
sum(dy^2)/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
1
rgp1()
rgp1()
rgp2()
head(swiss)
head(swiss)
mdl <- lm(Fertility ~ ., swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
vif(mdl)
mdl2 <- lm(Fertility ~ . -Examination, swiss)
vif(mdl2)
getwd()
setwd("C:/Users/Aman/Desktop/Rprog/Developing-Data-Products")
shinyapps::setAccountInfo(name='amansinha',
token='667613A64E5B02DA9BC0C6338439F898',
secret='4su5PYwav1vfpqawKfG1j3/mb/3FtycLCYaxuzjp')
library(shinyapps)
shinyapps::deployApp('C:/Users/Aman/Desktop/Rprog/Developing-Data-Products/server.html')
runApp("server.R")
library(shinyapps)
shinyapps::runApp('C:/Users/Aman/Desktop/Rprog/Developing-Data-Products/server.html')
shinyapps::setAccountInfo(name='amansinha',
token='667613A64E5B02DA9BC0C6338439F898',
secret='4su5PYwav1vfpqawKfG1j3/mb/3FtycLCYaxuzjp')
library(shinyapps)
shinyapps::deployApp('C:/Users/Aman/Desktop/Rprog/Developing-Data-Products/server.html')
library(shinyapps)
deployApp('C:/Users/Aman/Desktop/Rprog/Developing-Data-Products/server.html')
library(shinyapps)
deployApp('C:/Users/Aman/Desktop/Rprog/Developing-Data-Products')
